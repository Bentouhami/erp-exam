// path : src/lib/validations/UserValidations.ts
import { z } from "zod";
import { AddressSchema } from "@/lib/validations/AddressValidations";
import { UserAddressSchema } from "@/lib/validations/UserAddressValidations";

export const UserSchema = z.object({
    id: z.string().cuid(), // UUID or cuid string for database-generated ID
    customerNumber: z.string().min(1, "User number is required"),
    firstName: z.string().min(1, "First name is required"),
    lastName: z.string().min(1, "Last name is required"),
    companyName: z.string().optional(),
    vatNumber: z.string().optional(),
    companyNumber: z.string().optional(),
    exportNumber: z.string().optional(),
    isEnabled: z.boolean().optional(), // Default handled in database or app logic
    phone: z.string().optional(),
    mobile: z.string().optional(),
    fax: z.string().optional(),
    additionalInfo: z.string().optional(),
    paymentTermDays: z.number().min(0, "Payment term days must be 0 or more"),

    addresses: z.array(AddressSchema).optional(),
    userAddresses: z.array(UserAddressSchema).optional(),
});

// Create Schema
export const UserCreateSchema = UserSchema.omit({
    id: true, // ID is generated by the database

}).extend({
    isEnabled: z.boolean().default(true), // Default value applied if not provided
});

// Update Schema
export const UserUpdateSchema = UserSchema.partial();
